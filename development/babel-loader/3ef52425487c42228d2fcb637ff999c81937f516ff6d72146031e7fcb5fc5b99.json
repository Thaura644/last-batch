{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jtm/dev/rn-chat-cu/screens/Group.js\",\n  _this = this;\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors } from \"../config/constants\";\nimport { auth, database } from '../config/firebase';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { collection, doc, onSnapshot, orderBy, query, setDoc, where } from \"firebase/firestore\";\nimport ContactRow from \"../components/ContactRow\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Group = function Group() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedItems = _useState2[0],\n    setSelectedItems = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedUsers = _useState4[0],\n    setSelectedUsers = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    users = _useState6[0],\n    setUsers = _useState6[1];\n  useEffect(function () {\n    var collectionUserRef = collection(database, 'users');\n    var q = query(collectionUserRef, orderBy(\"name\", \"asc\"));\n    onSnapshot(q, function (doc) {\n      setUsers(doc.docs);\n    });\n  });\n  useEffect(function () {\n    if (selectedItems.length > 0) {\n      navigation.setOptions({\n        headerRight: function headerRight() {\n          return _jsxDEV(Text, {\n            style: styles.itemCount,\n            children: selectedItems.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, _this);\n        }\n      });\n    } else {\n      navigation.setOptions({\n        headerRight: function headerRight() {}\n      });\n    }\n  }, [selectedItems]);\n  function handleName(user) {\n    if (user.data().name) {\n      var _auth$currentUser;\n      if (user.data().email == (auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email)) {\n        return user.data().name + '*(You)';\n      }\n      return user.data().name;\n    } else if (user.data().email) {\n      return user.data().email;\n    } else {\n      return '~ No Name or Email ~';\n    }\n  }\n  function handleSubtitle(user) {\n    var _auth$currentUser2;\n    if (user.data().email == (auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email)) {\n      return 'Message yourself';\n    } else {\n      return 'User status';\n    }\n  }\n  var handleOnPress = function handleOnPress(user) {\n    selectItems(user);\n  };\n  var selectItems = function selectItems(user) {\n    if (selectedItems.includes(user.id)) {\n      var newListItems = selectedItems.filter(function (listItem) {\n        return listItem !== user.id;\n      });\n      return setSelectedItems(_toConsumableArray(newListItems));\n    }\n    setSelectedItems([].concat(_toConsumableArray(selectedItems), [user.id]));\n    if (selectedUsers.includes(user.id)) {\n      var _newListItems = selectedItems.filter(function (listItem) {\n        return listItem !== user.id;\n      });\n      return setSelectedItems(_toConsumableArray(_newListItems));\n    }\n    setSelectedUsers([].concat(_toConsumableArray(selectedUsers), [user]));\n  };\n  var getSelected = function getSelected(user) {\n    return selectedItems.includes(user.id);\n  };\n  var deSelectItems = function deSelectItems() {\n    setSelectedItems([]);\n    setSelectedUsers([]);\n  };\n  var handleFabPress = function handleFabPress() {\n    var _auth$currentUser3, _auth$currentUser4, _auth$currentUser5;\n    var users = [];\n    users.push({\n      email: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.email,\n      name: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.displayName,\n      deletedFromChat: false\n    });\n    selectedUsers.map(function (user) {\n      users.push({\n        email: user.data().email,\n        name: user.data().name,\n        deletedFromChat: false\n      });\n    });\n    var groupName = 'GROUP ' + Math.floor(Math.random() * 10) + '🌍';\n    var newRef = doc(collection(database, \"chats\"));\n    setDoc(newRef, {\n      lastUpdated: Date.now(),\n      users: users,\n      messages: [],\n      groupName: groupName,\n      groupAdmins: [auth == null ? void 0 : (_auth$currentUser5 = auth.currentUser) == null ? void 0 : _auth$currentUser5.email]\n    }).then(navigation.navigate('Chat', {\n      id: newRef.id,\n      chatName: groupName\n    }));\n    deSelectItems();\n  };\n  return _jsxDEV(Pressable, {\n    style: styles.container,\n    onPress: deSelectItems,\n    children: [users.length === 0 ? _jsxDEV(View, {\n      style: styles.blankContainer,\n      children: _jsxDEV(Text, {\n        style: styles.textContainer,\n        children: \"No registered users yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, _this) : _jsxDEV(ScrollView, {\n      children: users.map(function (user) {\n        var _auth$currentUser6;\n        return user.data().email != (auth == null ? void 0 : (_auth$currentUser6 = auth.currentUser) == null ? void 0 : _auth$currentUser6.email) && _jsxDEV(React.Fragment, {\n          children: _jsxDEV(ContactRow, {\n            style: getSelected(user) ? styles.selectedContactRow : \"\",\n            name: handleName(user),\n            subtitle: handleSubtitle(user),\n            onPress: function onPress() {\n              return handleOnPress(user);\n            },\n            selected: getSelected(user),\n            showForwardIcon: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, _this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, _this), selectedItems.length > 0 && _jsxDEV(TouchableOpacity, {\n      style: styles.fab,\n      onPress: handleFabPress,\n      children: _jsxDEV(View, {\n        style: styles.fabContainer,\n        children: _jsxDEV(Ionicons, {\n          name: \"arrow-forward-outline\",\n          size: 24,\n          color: 'white'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    bottom: 12,\n    right: 12\n  },\n  fabContainer: {\n    width: 56,\n    height: 56,\n    backgroundColor: colors.teal,\n    borderRadius: 28,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1\n  },\n  textContainer: {\n    fontSize: 16\n  },\n  blankContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contactRow: {\n    backgroundColor: 'white',\n    marginTop: 16,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderColor: colors.border\n  },\n  itemCount: {\n    right: 10,\n    color: colors.teal,\n    fontSize: 18,\n    fontWeight: 400\n  }\n});\nexport default Group;","map":{"version":3,"names":["React","useEffect","useState","Text","View","StyleSheet","Pressable","ScrollView","TouchableOpacity","colors","auth","database","useNavigation","collection","doc","onSnapshot","orderBy","query","setDoc","where","ContactRow","Ionicons","jsxDEV","_jsxDEV","Group","navigation","_useState","_useState2","_slicedToArray","selectedItems","setSelectedItems","_useState3","_useState4","selectedUsers","setSelectedUsers","_useState5","_useState6","users","setUsers","collectionUserRef","q","docs","length","setOptions","headerRight","style","styles","itemCount","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","handleName","user","data","name","_auth$currentUser","email","currentUser","handleSubtitle","_auth$currentUser2","handleOnPress","selectItems","includes","id","newListItems","filter","listItem","_toConsumableArray","concat","getSelected","deSelectItems","handleFabPress","_auth$currentUser3","_auth$currentUser4","_auth$currentUser5","push","displayName","deletedFromChat","map","groupName","Math","floor","random","newRef","lastUpdated","Date","now","messages","groupAdmins","then","navigate","chatName","container","onPress","blankContainer","textContainer","_auth$currentUser6","Fragment","selectedContactRow","subtitle","selected","showForwardIcon","fab","fabContainer","size","color","create","position","bottom","right","width","height","backgroundColor","teal","borderRadius","justifyContent","alignItems","flex","fontSize","contactRow","marginTop","borderTopWidth","hairlineWidth","borderColor","border","fontWeight"],"sources":["/home/jtm/dev/rn-chat-cu/screens/Group.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, StyleSheet, Pressable, ScrollView, TouchableOpacity } from \"react-native\";\nimport { colors } from \"../config/constants\";\nimport { auth, database } from '../config/firebase';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { collection, doc, onSnapshot, orderBy, query, setDoc, where } from \"firebase/firestore\";\nimport ContactRow from \"../components/ContactRow\";\nimport { Ionicons } from '@expo/vector-icons';\n\nconst Group = () => {\n    const navigation = useNavigation();\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        const collectionUserRef = collection(database, 'users');\n        const q = query(collectionUserRef, orderBy(\"name\", \"asc\"));\n        onSnapshot(q, (doc) => {\n            setUsers(doc.docs);\n        });\n    });\n\n    useEffect(() => {\n        // SELECTED USERS COUNT \n        if (selectedItems.length > 0) {\n            navigation.setOptions({\n                headerRight: () => (\n                    <Text style={styles.itemCount}>\n                        {selectedItems.length}\n                    </Text>\n                ),\n            });\n        } else {\n            navigation.setOptions({\n                headerRight: () => { },\n            },\n            );\n        }\n    }, [selectedItems]);\n\n    function handleName(user) {\n        if (user.data().name) {\n            if (user.data().email == auth?.currentUser?.email) {\n                return user.data().name + ('*(You)');\n            }\n            return user.data().name;\n        } else if (user.data().email) {\n\n            return user.data().email;\n        } else {\n            return '~ No Name or Email ~';\n        }\n    }\n\n    function handleSubtitle(user) {\n        if (user.data().email == auth?.currentUser?.email) {\n            return 'Message yourself';\n        } else {\n            return 'User status';\n        }\n    }\n\n    const handleOnPress = (user) => {\n        selectItems(user);\n    }\n\n    const selectItems = (user) => {\n        if (selectedItems.includes(user.id)) {\n            const newListItems = selectedItems.filter(\n                listItem => listItem !== user.id,\n            );\n            return setSelectedItems([...newListItems]);\n        }\n        setSelectedItems([...selectedItems, user.id]);\n\n        if (selectedUsers.includes(user.id)) {\n            const newListItems = selectedItems.filter(\n                listItem => listItem !== user.id,\n            );\n            return setSelectedItems([...newListItems]);\n        }\n        setSelectedUsers([...selectedUsers, user]);\n    }\n\n    const getSelected = (user) => {\n        return selectedItems.includes(user.id);\n    }\n\n    const deSelectItems = () => {\n        setSelectedItems([]);\n        setSelectedUsers([]);\n    };\n\n    const handleFabPress = () => {\n        let users = [];\n        //Add admin first to group\n        users.push({ email: auth?.currentUser?.email, name: auth?.currentUser?.displayName, deletedFromChat: false });\n        selectedUsers.map(user => {\n            //Add other users\n            users.push({ email: user.data().email, name: user.data().name, deletedFromChat: false });\n        })\n        //Creates new Group chat\n        const groupName = 'GROUP ' + Math.floor(Math.random() * 10) + '🌍';\n        const newRef = doc(collection(database, \"chats\"));\n        setDoc(newRef, {\n            lastUpdated: Date.now(),\n            users: users,\n            messages: [],\n            groupName: groupName, //TODO admin can set group name\n            groupAdmins: [auth?.currentUser?.email] //TODO can change group admins later\n        }).then(\n            navigation.navigate('Chat', { id: newRef.id, chatName: groupName })\n        );\n        deSelectItems();\n    }\n\n    return (\n        <Pressable style={styles.container} onPress={deSelectItems}>\n            {users.length === 0 ? (\n                <View style={styles.blankContainer} >\n                    <Text style={styles.textContainer}>\n                        No registered users yet\n                    </Text>\n                </View>\n            ) : (\n                <ScrollView>\n                    {users.map(user =>\n                    (\n                        user.data().email != auth?.currentUser?.email &&\n\n                        <React.Fragment key={user.id}>\n                            <ContactRow style={getSelected(user) ? styles.selectedContactRow : \"\"}\n                                name={handleName(user)}\n                                subtitle={handleSubtitle(user)}\n                                onPress={() => handleOnPress(user)}\n                                selected={getSelected(user)}\n                                showForwardIcon={false}\n                            />\n                        </React.Fragment>\n                    ))}\n                </ScrollView>\n            )}\n\n            {selectedItems.length > 0 &&\n                <TouchableOpacity style={styles.fab} onPress={handleFabPress}>\n                    <View style={styles.fabContainer}>\n                        <Ionicons name=\"arrow-forward-outline\" size={24} color={'white'} />\n                    </View>\n                </TouchableOpacity>\n            }\n\n        </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n    fab: {\n        position: 'absolute',\n        bottom: 12,\n        right: 12\n    },\n    fabContainer: {\n        width: 56,\n        height: 56,\n        backgroundColor: colors.teal,\n        borderRadius: 28,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    container: {\n        flex: 1\n    },\n    textContainer: {\n        fontSize: 16\n    },\n    blankContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    contactRow: {\n        backgroundColor: 'white',\n        marginTop: 16,\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderColor: colors.border\n    },\n    itemCount: {\n        right: 10,\n        color: colors.teal,\n        fontSize: 18,\n        fontWeight: 400,\n    }\n})\n\nexport default Group;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,oBAAoB;AACnD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,EAAEC,GAAG,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,QAAQ,oBAAoB;AAC/F,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAChB,IAAMC,UAAU,GAAGb,aAAa,CAAC,CAAC;EAClC,IAAAc,SAAA,GAA0CxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA0C7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAA0BjC,QAAQ,CAAC,EAAE,CAAC;IAAAkC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBnC,SAAS,CAAC,YAAM;IACZ,IAAMsC,iBAAiB,GAAG1B,UAAU,CAACF,QAAQ,EAAE,OAAO,CAAC;IACvD,IAAM6B,CAAC,GAAGvB,KAAK,CAACsB,iBAAiB,EAAEvB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1DD,UAAU,CAACyB,CAAC,EAAE,UAAC1B,GAAG,EAAK;MACnBwB,QAAQ,CAACxB,GAAG,CAAC2B,IAAI,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,CAAC;EAEFxC,SAAS,CAAC,YAAM;IAEZ,IAAI4B,aAAa,CAACa,MAAM,GAAG,CAAC,EAAE;MAC1BjB,UAAU,CAACkB,UAAU,CAAC;QAClBC,WAAW,EAAE,SAAAA,YAAA;UAAA,OACTrB,OAAA,CAACpB,IAAI;YAAC0C,KAAK,EAAEC,MAAM,CAACC,SAAU;YAAAC,QAAA,EACzBnB,aAAa,CAACa;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACnB,CAAC;QAAA;MAEf,CAAC,CAAC;IACN,CAAC,MAAM;MACH5B,UAAU,CAACkB,UAAU,CAAC;QAClBC,WAAW,EAAE,SAAAA,YAAA,EAAM,CAAE;MACzB,CACA,CAAC;IACL;EACJ,CAAC,EAAE,CAACf,aAAa,CAAC,CAAC;EAEnB,SAASyB,UAAUA,CAACC,IAAI,EAAE;IACtB,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,EAAE;MAAA,IAAAC,iBAAA;MAClB,IAAIH,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK,KAAIjD,IAAI,qBAAAgD,iBAAA,GAAJhD,IAAI,CAAEkD,WAAW,qBAAjBF,iBAAA,CAAmBC,KAAK,GAAE;QAC/C,OAAOJ,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,GAAI,QAAS;MACxC;MACA,OAAOF,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI;IAC3B,CAAC,MAAM,IAAIF,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK,EAAE;MAE1B,OAAOJ,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK;IAC5B,CAAC,MAAM;MACH,OAAO,sBAAsB;IACjC;EACJ;EAEA,SAASE,cAAcA,CAACN,IAAI,EAAE;IAAA,IAAAO,kBAAA;IAC1B,IAAIP,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK,KAAIjD,IAAI,qBAAAoD,kBAAA,GAAJpD,IAAI,CAAEkD,WAAW,qBAAjBE,kBAAA,CAAmBH,KAAK,GAAE;MAC/C,OAAO,kBAAkB;IAC7B,CAAC,MAAM;MACH,OAAO,aAAa;IACxB;EACJ;EAEA,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAIR,IAAI,EAAK;IAC5BS,WAAW,CAACT,IAAI,CAAC;EACrB,CAAC;EAED,IAAMS,WAAW,GAAG,SAAdA,WAAWA,CAAIT,IAAI,EAAK;IAC1B,IAAI1B,aAAa,CAACoC,QAAQ,CAACV,IAAI,CAACW,EAAE,CAAC,EAAE;MACjC,IAAMC,YAAY,GAAGtC,aAAa,CAACuC,MAAM,CACrC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,KAAKd,IAAI,CAACW,EAAE;MAAA,CACpC,CAAC;MACD,OAAOpC,gBAAgB,CAAAwC,kBAAA,CAAKH,YAAY,CAAC,CAAC;IAC9C;IACArC,gBAAgB,IAAAyC,MAAA,CAAAD,kBAAA,CAAKzC,aAAa,IAAE0B,IAAI,CAACW,EAAE,EAAC,CAAC;IAE7C,IAAIjC,aAAa,CAACgC,QAAQ,CAACV,IAAI,CAACW,EAAE,CAAC,EAAE;MACjC,IAAMC,aAAY,GAAGtC,aAAa,CAACuC,MAAM,CACrC,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,KAAKd,IAAI,CAACW,EAAE;MAAA,CACpC,CAAC;MACD,OAAOpC,gBAAgB,CAAAwC,kBAAA,CAAKH,aAAY,CAAC,CAAC;IAC9C;IACAjC,gBAAgB,IAAAqC,MAAA,CAAAD,kBAAA,CAAKrC,aAAa,IAAEsB,IAAI,EAAC,CAAC;EAC9C,CAAC;EAED,IAAMiB,WAAW,GAAG,SAAdA,WAAWA,CAAIjB,IAAI,EAAK;IAC1B,OAAO1B,aAAa,CAACoC,QAAQ,CAACV,IAAI,CAACW,EAAE,CAAC;EAC1C,CAAC;EAED,IAAMO,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB3C,gBAAgB,CAAC,EAAE,CAAC;IACpBI,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,IAAMwC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAAA,IAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;IACzB,IAAIxC,KAAK,GAAG,EAAE;IAEdA,KAAK,CAACyC,IAAI,CAAC;MAAEnB,KAAK,EAAEjD,IAAI,qBAAAiE,kBAAA,GAAJjE,IAAI,CAAEkD,WAAW,qBAAjBe,kBAAA,CAAmBhB,KAAK;MAAEF,IAAI,EAAE/C,IAAI,qBAAAkE,kBAAA,GAAJlE,IAAI,CAAEkD,WAAW,qBAAjBgB,kBAAA,CAAmBG,WAAW;MAAEC,eAAe,EAAE;IAAM,CAAC,CAAC;IAC7G/C,aAAa,CAACgD,GAAG,CAAC,UAAA1B,IAAI,EAAI;MAEtBlB,KAAK,CAACyC,IAAI,CAAC;QAAEnB,KAAK,EAAEJ,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK;QAAEF,IAAI,EAAEF,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI;QAAEuB,eAAe,EAAE;MAAM,CAAC,CAAC;IAC5F,CAAC,CAAC;IAEF,IAAME,SAAS,GAAG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;IAClE,IAAMC,MAAM,GAAGxE,GAAG,CAACD,UAAU,CAACF,QAAQ,EAAE,OAAO,CAAC,CAAC;IACjDO,MAAM,CAACoE,MAAM,EAAE;MACXC,WAAW,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACvBpD,KAAK,EAAEA,KAAK;MACZqD,QAAQ,EAAE,EAAE;MACZR,SAAS,EAAEA,SAAS;MACpBS,WAAW,EAAE,CAACjF,IAAI,qBAAAmE,kBAAA,GAAJnE,IAAI,CAAEkD,WAAW,qBAAjBiB,kBAAA,CAAmBlB,KAAK;IAC1C,CAAC,CAAC,CAACiC,IAAI,CACHnE,UAAU,CAACoE,QAAQ,CAAC,MAAM,EAAE;MAAE3B,EAAE,EAAEoB,MAAM,CAACpB,EAAE;MAAE4B,QAAQ,EAAEZ;IAAU,CAAC,CACtE,CAAC;IACDT,aAAa,CAAC,CAAC;EACnB,CAAC;EAED,OACIlD,OAAA,CAACjB,SAAS;IAACuC,KAAK,EAAEC,MAAM,CAACiD,SAAU;IAACC,OAAO,EAAEvB,aAAc;IAAAzB,QAAA,GACtDX,KAAK,CAACK,MAAM,KAAK,CAAC,GACfnB,OAAA,CAACnB,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACmD,cAAe;MAAAjD,QAAA,EAC/BzB,OAAA,CAACpB,IAAI;QAAC0C,KAAK,EAAEC,MAAM,CAACoD,aAAc;QAAAlD,QAAA,EAAC;MAEnC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACL,CAAC,GAEP9B,OAAA,CAAChB,UAAU;MAAAyC,QAAA,EACNX,KAAK,CAAC4C,GAAG,CAAC,UAAA1B,IAAI;QAAA,IAAA4C,kBAAA;QAAA,OAEX5C,IAAI,CAACC,IAAI,CAAC,CAAC,CAACG,KAAK,KAAIjD,IAAI,qBAAAyF,kBAAA,GAAJzF,IAAI,CAAEkD,WAAW,qBAAjBuC,kBAAA,CAAmBxC,KAAK,KAE7CpC,OAAA,CAACvB,KAAK,CAACoG,QAAQ;UAAApD,QAAA,EACXzB,OAAA,CAACH,UAAU;YAACyB,KAAK,EAAE2B,WAAW,CAACjB,IAAI,CAAC,GAAGT,MAAM,CAACuD,kBAAkB,GAAG,EAAG;YAClE5C,IAAI,EAAEH,UAAU,CAACC,IAAI,CAAE;YACvB+C,QAAQ,EAAEzC,cAAc,CAACN,IAAI,CAAE;YAC/ByC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMjC,aAAa,CAACR,IAAI,CAAC;YAAA,CAAC;YACnCgD,QAAQ,EAAE/B,WAAW,CAACjB,IAAI,CAAE;YAC5BiD,eAAe,EAAE;UAAM;YAAAvD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAC1B;QAAC,GAPeE,IAAI,CAACW,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAQZ,CAAC;MAAA,CACpB;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACM,CACf,EAEAxB,aAAa,CAACa,MAAM,GAAG,CAAC,IACrBnB,OAAA,CAACf,gBAAgB;MAACqC,KAAK,EAAEC,MAAM,CAAC2D,GAAI;MAACT,OAAO,EAAEtB,cAAe;MAAA1B,QAAA,EACzDzB,OAAA,CAACnB,IAAI;QAACyC,KAAK,EAAEC,MAAM,CAAC4D,YAAa;QAAA1D,QAAA,EAC7BzB,OAAA,CAACF,QAAQ;UAACoC,IAAI,EAAC,uBAAuB;UAACkD,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE;QAAQ;UAAA3D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACjE;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACO,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAGhB,CAAC;AAEpB,CAAC;AAED,IAAMP,MAAM,GAAGzC,UAAU,CAACwG,MAAM,CAAC;EAC7BJ,GAAG,EAAE;IACDK,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDN,YAAY,EAAE;IACVO,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE1G,MAAM,CAAC2G,IAAI;IAC5BC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDxB,SAAS,EAAE;IACPyB,IAAI,EAAE;EACV,CAAC;EACDtB,aAAa,EAAE;IACXuB,QAAQ,EAAE;EACd,CAAC;EACDxB,cAAc,EAAE;IACZuB,IAAI,EAAE,CAAC;IACPF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDG,UAAU,EAAE;IACRP,eAAe,EAAE,OAAO;IACxBQ,SAAS,EAAE,EAAE;IACbC,cAAc,EAAEvH,UAAU,CAACwH,aAAa;IACxCC,WAAW,EAAErH,MAAM,CAACsH;EACxB,CAAC;EACDhF,SAAS,EAAE;IACPiE,KAAK,EAAE,EAAE;IACTJ,KAAK,EAAEnG,MAAM,CAAC2G,IAAI;IAClBK,QAAQ,EAAE,EAAE;IACZO,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAexG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}