{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jtm/dev/rn-chat-cu/screens/Chat.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { GiftedChat, Bubble, Send, InputToolbar } from 'react-native-gifted-chat';\nimport { auth, database } from '../config/firebase';\nimport { doc, onSnapshot, query, setDoc, where } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { colors } from '../config/constants';\nimport EmojiModal from 'react-native-emoji-modal';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport uuid from 'react-native-uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat(_ref) {\n  var _auth$currentUser, _auth$currentUser2;\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modal = _useState4[0],\n    setModal = _useState4[1];\n  useEffect(function () {\n    var unsubscribe = onSnapshot(doc(database, 'chats', route.params.id), function (doc) {\n      setMessages(doc.data().messages.map(function (message) {\n        var _message$image;\n        return {\n          _id: message._id,\n          createdAt: message.createdAt.toDate(),\n          text: message.text,\n          user: message.user,\n          sent: message.sent,\n          received: message.received,\n          image: (_message$image = message.image) != null ? _message$image : ''\n        };\n      }));\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, [route.params.id]);\n  var _onSend = useCallback(function () {\n    var m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var messagesWillSend = [_objectSpread(_objectSpread({}, m[0]), {}, {\n      sent: true,\n      received: false\n    })];\n    setDoc(doc(database, 'chats', route.params.id), {\n      messages: GiftedChat.append(messages, messagesWillSend),\n      lastUpdated: Date.now()\n    }, {\n      merge: true\n    });\n  }, [route.params.id, messages]);\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        quality: 1\n      });\n      if (!result.canceled) {\n        yield uploadImageAsync(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function uploadImageAsync(_x) {\n    return _uploadImageAsync.apply(this, arguments);\n  }\n  function _uploadImageAsync() {\n    _uploadImageAsync = _asyncToGenerator(function* (uri) {\n      var _auth$currentUser5, _auth$currentUser6;\n      var blob = yield new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          resolve(xhr.response);\n        };\n        xhr.onerror = function (e) {\n          console.log(e);\n          reject(new TypeError(\"Network request failed\"));\n        };\n        xhr.responseType = \"blob\";\n        xhr.open(\"GET\", uri, true);\n        xhr.send(null);\n      });\n      var randomString = uuid.v4();\n      var fileRef = ref(getStorage(), randomString);\n      var result = yield uploadBytes(fileRef, blob);\n      blob.close();\n      var uploadedFileString = yield getDownloadURL(fileRef);\n      _onSend([{\n        _id: randomString,\n        createdAt: new Date(),\n        text: '',\n        image: uploadedFileString,\n        user: {\n          _id: auth == null ? void 0 : (_auth$currentUser5 = auth.currentUser) == null ? void 0 : _auth$currentUser5.email,\n          name: auth == null ? void 0 : (_auth$currentUser6 = auth.currentUser) == null ? void 0 : _auth$currentUser6.displayName,\n          avatar: 'https://i.pravatar.cc/300'\n        }\n      }]);\n    });\n    return _uploadImageAsync.apply(this, arguments);\n  }\n  function renderBubble(props) {\n    return _jsxDEV(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: colors.primary\n        },\n        left: {\n          backgroundColor: 'lightgrey'\n        }\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n  function renderSend(props) {\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.addImageIcon,\n        onPress: pickImage,\n        children: _jsxDEV(View, {\n          children: _jsxDEV(Ionicons, {\n            name: \"attach-outline\",\n            size: 32,\n            color: colors.teal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), _jsxDEV(Send, _objectSpread(_objectSpread({}, props), {}, {\n        children: _jsxDEV(View, {\n          style: {\n            justifyContent: 'center',\n            height: '100%',\n            marginLeft: 8,\n            marginRight: 4,\n            marginTop: 12\n          },\n          children: _jsxDEV(Ionicons, {\n            name: \"send\",\n            size: 24,\n            color: colors.teal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  function renderInputToolbar(props) {\n    return _jsxDEV(InputToolbar, _objectSpread(_objectSpread({}, props), {}, {\n      containerStyle: styles.inputToolbar,\n      renderActions: renderActions\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  }\n  function renderActions() {\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.emojiIcon,\n      onPress: handleEmojiPanel,\n      children: _jsxDEV(View, {\n        children: _jsxDEV(Ionicons, {\n          name: \"happy-outline\",\n          size: 32,\n          color: colors.teal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n  function handleEmojiPanel() {\n    if (modal) {\n      setModal(false);\n    } else {\n      Keyboard.dismiss();\n      setModal(true);\n    }\n  }\n  function renderLoading() {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: colors.teal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  }\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(GiftedChat, {\n      messages: messages,\n      showAvatarForEveryMessage: false,\n      showUserAvatar: false,\n      onSend: function onSend(messages) {\n        return _onSend(messages);\n      },\n      imageStyle: {\n        height: 212,\n        width: 212\n      },\n      messagesContainerStyle: {\n        backgroundColor: '#fff'\n      },\n      textInputStyle: {\n        backgroundColor: '#fff',\n        borderRadius: 20\n      },\n      user: {\n        _id: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email,\n        name: auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.displayName,\n        avatar: 'https://i.pravatar.cc/300'\n      },\n      renderBubble: renderBubble,\n      renderSend: renderSend,\n      renderUsernameOnMessage: true,\n      renderAvatarOnTop: true,\n      renderInputToolbar: renderInputToolbar,\n      minInputToolbarHeight: 56,\n      scrollToBottom: true,\n      onPressActionButton: handleEmojiPanel,\n      scrollToBottomStyle: styles.scrollToBottomStyle,\n      renderLoading: renderLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), modal && _jsxDEV(EmojiModal, {\n      onPressOutside: handleEmojiPanel,\n      modalStyle: styles.emojiModal,\n      containerStyle: styles.emojiContainerModal,\n      backgroundStyle: styles.emojiBackgroundModal,\n      columns: 5,\n      emojiSize: 66,\n      activeShortcutColor: colors.primary,\n      onEmojiSelected: function onEmojiSelected(emoji) {\n        var _auth$currentUser3, _auth$currentUser4;\n        _onSend([{\n          _id: uuid.v4(),\n          createdAt: new Date(),\n          text: emoji,\n          user: {\n            _id: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.email,\n            name: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.displayName,\n            avatar: 'https://i.pravatar.cc/300'\n          }\n        }]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\nvar styles = StyleSheet.create({\n  inputToolbar: {\n    bottom: 6,\n    marginLeft: 8,\n    marginRight: 8,\n    borderRadius: 16\n  },\n  emojiIcon: {\n    marginLeft: 4,\n    bottom: 8,\n    width: 32,\n    height: 32,\n    borderRadius: 16\n  },\n  emojiModal: {},\n  emojiContainerModal: {\n    height: 348,\n    width: 396\n  },\n  emojiBackgroundModal: {},\n  scrollToBottomStyle: {\n    borderColor: colors.grey,\n    borderWidth: 2,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    position: 'absolute',\n    bottom: 12,\n    right: 12\n  },\n  addImageIcon: {\n    bottom: 8,\n    width: 32,\n    height: 32,\n    borderRadius: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","StyleSheet","TouchableOpacity","Keyboard","Text","ActivityIndicator","Ionicons","GiftedChat","Bubble","Send","InputToolbar","auth","database","doc","onSnapshot","query","setDoc","where","getStorage","ref","uploadBytes","getDownloadURL","colors","EmojiModal","useNavigation","ImagePicker","uuid","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_auth$currentUser","_auth$currentUser2","route","navigation","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","modal","setModal","unsubscribe","params","id","data","map","message","_message$image","_id","createdAt","toDate","text","user","sent","received","image","onSend","m","arguments","length","undefined","messagesWillSend","_objectSpread","append","lastUpdated","Date","now","merge","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","canceled","uploadImageAsync","assets","uri","apply","_x","_uploadImageAsync","_auth$currentUser5","_auth$currentUser6","blob","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","console","log","TypeError","responseType","open","send","randomString","v4","fileRef","close","uploadedFileString","currentUser","email","name","displayName","avatar","renderBubble","props","wrapperStyle","right","backgroundColor","primary","left","fileName","_jsxFileName","lineNumber","columnNumber","renderSend","children","style","styles","addImageIcon","onPress","size","color","teal","justifyContent","height","marginLeft","marginRight","marginTop","renderInputToolbar","containerStyle","inputToolbar","renderActions","emojiIcon","handleEmojiPanel","dismiss","renderLoading","loadingContainer","showAvatarForEveryMessage","showUserAvatar","imageStyle","width","messagesContainerStyle","textInputStyle","borderRadius","renderUsernameOnMessage","renderAvatarOnTop","minInputToolbarHeight","scrollToBottom","onPressActionButton","scrollToBottomStyle","onPressOutside","modalStyle","emojiModal","emojiContainerModal","backgroundStyle","emojiBackgroundModal","columns","emojiSize","activeShortcutColor","onEmojiSelected","emoji","_auth$currentUser3","_auth$currentUser4","create","bottom","borderColor","grey","borderWidth","position","flex","alignItems"],"sources":["/home/jtm/dev/rn-chat-cu/screens/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { View, StyleSheet, TouchableOpacity, Keyboard, Text, ActivityIndicator } from \"react-native\";\nimport { Ionicons } from '@expo/vector-icons'\nimport { GiftedChat, Bubble, Send, InputToolbar } from 'react-native-gifted-chat'\nimport { auth, database } from '../config/firebase';\nimport { doc, onSnapshot, query, setDoc, where } from 'firebase/firestore';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { colors } from '../config/constants';\nimport EmojiModal from 'react-native-emoji-modal';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport uuid from 'react-native-uuid';\n\nfunction Chat({ route }) {\n    const navigation = useNavigation();\n    const [messages, setMessages] = useState([]);\n    const [modal, setModal] = useState(false);\n\n    useEffect(() => {\n        const unsubscribe = onSnapshot(doc(database, 'chats', route.params.id), (doc) => {\n            setMessages(doc.data().messages.map((message) => ({\n                _id: message._id,\n                createdAt: message.createdAt.toDate(),\n                text: message.text,\n                user: message.user,\n                sent: message.sent,\n                received: message.received,\n                image: message.image ?? '',\n            })));\n        });\n\n\n        return () => unsubscribe();\n    }, [route.params.id]);\n\n    const onSend = useCallback((m = []) => {\n        const messagesWillSend = [{ ...m[0], sent: true, received: false }];\n        setDoc(doc(database, 'chats', route.params.id), { messages: GiftedChat.append(messages, messagesWillSend), lastUpdated: Date.now() }, { merge: true });\n    }, [route.params.id, messages]);\n\n\n    const pickImage = async () => {\n        // No permissions request is necessary for launching the image library\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            // aspect: [4, 3],\n            quality: 1,\n        });\n\n        if (!result.canceled) {\n            await uploadImageAsync(result.assets[0].uri);\n        }\n    };\n\n    async function uploadImageAsync(uri) {\n        // Why are we using XMLHttpRequest? See:\n        // https://github.com/expo/expo/issues/2402#issuecomment-443726662\n        const blob = await new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.onload = function () {\n                resolve(xhr.response);\n            };\n            xhr.onerror = function (e) {\n                console.log(e);\n                reject(new TypeError(\"Network request failed\"));\n            };\n            xhr.responseType = \"blob\";\n            xhr.open(\"GET\", uri, true);\n            xhr.send(null);\n        });\n        const randomString = uuid.v4();\n        const fileRef = ref(getStorage(), randomString);\n        const result = await uploadBytes(fileRef, blob);\n\n        // We're done with the blob, close and release it\n        blob.close();\n        const uploadedFileString = await getDownloadURL(fileRef);\n\n        onSend([{\n            _id: randomString,\n            createdAt: new Date(),\n            text: '',\n            image: uploadedFileString,\n            user: {\n                _id: auth?.currentUser?.email,\n                name: auth?.currentUser?.displayName,\n                avatar: 'https://i.pravatar.cc/300'\n            }\n        }]);\n        // console.log(uploadedFileString);\n    }\n\n\n    function renderBubble(props) {\n        return (\n            <Bubble\n                {...props}\n                wrapperStyle={{\n                    right: {\n                        backgroundColor: colors.primary\n                    },\n                    left: {\n                        backgroundColor: 'lightgrey'\n                    }\n                }}\n            />\n        )\n    }\n\n    function renderSend(props) {\n        return (\n            <>\n                <TouchableOpacity style={styles.addImageIcon} onPress={pickImage}>\n                    <View>\n                        <Ionicons\n                            name='attach-outline'\n                            size={32}\n                            color={colors.teal} />\n                    </View>\n                </TouchableOpacity>\n                <Send {...props}>\n                    <View style={{ justifyContent: 'center', height: '100%', marginLeft: 8, marginRight: 4, marginTop: 12 }}>\n                        <Ionicons\n                            name='send'\n                            size={24}\n                            color={colors.teal} />\n                    </View>\n                </Send>\n            </>\n        )\n    }\n\n    function renderInputToolbar(props) {\n        return (\n            <InputToolbar {...props}\n                containerStyle={styles.inputToolbar}\n                renderActions={renderActions}\n            >\n            </InputToolbar >\n        )\n    }\n\n    function renderActions() {\n        return (\n            <TouchableOpacity style={styles.emojiIcon} onPress={handleEmojiPanel}>\n                <View>\n                    <Ionicons\n                        name='happy-outline'\n                        size={32}\n                        color={colors.teal} />\n                </View>\n            </TouchableOpacity>\n        )\n    }\n\n    function handleEmojiPanel() {\n        if (modal) {\n            setModal(false);\n        } else {\n            Keyboard.dismiss();\n            setModal(true);\n        }\n    }\n\n    function renderLoading() {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size='large' color={colors.teal} />\n            </View>\n        );\n    }\n\n    return (\n        <>\n            <GiftedChat\n                messages={messages}\n                showAvatarForEveryMessage={false}\n                showUserAvatar={false}\n                onSend={messages => onSend(messages)}\n                imageStyle={{\n                    height: 212,\n                    width: 212\n                }}\n                messagesContainerStyle={{\n                    backgroundColor: '#fff'\n                }}\n                textInputStyle={{\n                    backgroundColor: '#fff',\n                    borderRadius: 20,\n                }}\n                user={{\n                    _id: auth?.currentUser?.email,\n                    name: auth?.currentUser?.displayName,\n                    avatar: 'https://i.pravatar.cc/300'\n                }}\n                renderBubble={renderBubble}\n                renderSend={renderSend}\n                renderUsernameOnMessage={true}\n                renderAvatarOnTop={true}\n                renderInputToolbar={renderInputToolbar}\n                minInputToolbarHeight={56}\n                scrollToBottom={true}\n                onPressActionButton={handleEmojiPanel}\n                scrollToBottomStyle={styles.scrollToBottomStyle}\n                renderLoading={renderLoading}\n            // onInputTextChanged={handleTyping}\n            // isTyping={handleTyping}\n            // shouldUpdateMessage={() => { return false; }}\n            />\n\n            {modal &&\n                <EmojiModal\n                    onPressOutside={handleEmojiPanel}\n                    modalStyle={styles.emojiModal}\n                    containerStyle={styles.emojiContainerModal}\n                    backgroundStyle={styles.emojiBackgroundModal}\n                    columns={5}\n                    emojiSize={66}\n                    activeShortcutColor={colors.primary}\n                    onEmojiSelected={(emoji) => {\n                        // console.log(emoji)\n                        // setEmojiMessage(emoji)\n                        onSend([{\n                            _id: uuid.v4(),\n                            createdAt: new Date(),\n                            text: emoji,\n                            user: {\n                                _id: auth?.currentUser?.email,\n                                name: auth?.currentUser?.displayName,\n                                avatar: 'https://i.pravatar.cc/300'\n                            }\n                        }]);\n                        //TODO handle this function. Return new GiftedChat component maybe??\n                    }}\n                />\n            }\n\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputToolbar: {\n        bottom: 6,\n        marginLeft: 8,\n        marginRight: 8,\n        borderRadius: 16,\n    },\n    emojiIcon: {\n        marginLeft: 4,\n        bottom: 8,\n        width: 32,\n        height: 32,\n        borderRadius: 16,\n    },\n    emojiModal: {\n\n    },\n    emojiContainerModal: {\n        height: 348,\n        width: 396,\n    },\n    emojiBackgroundModal: {\n\n    },\n    scrollToBottomStyle: {\n        borderColor: colors.grey,\n        borderWidth: 2,\n        width: 56,\n        height: 56,\n        borderRadius: 28,\n        position: 'absolute',\n        bottom: 12,\n        right: 12\n    },\n    addImageIcon: {\n        bottom: 8,\n        width: 32,\n        height: 32,\n        borderRadius: 16,\n    },\n    loadingContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n})\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}